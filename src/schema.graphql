scalar Date
scalar DateTime

type Query {
  categorias: [ Categoria!]!
  user: User
}

type Mutation {
  criaCategoria(descricao: String!): Categoria!
  criaReceitaMensal( 
    descricao: String!,
    entrada: Date!,
    valor: Float!, 
    idCliente: String! ): Receita!
  criaCliente(
    nome: String!
    telefone: String!
    endereco: String
    cpf: String!
    cep: String
   ): Cliente!
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, password: String!, nome: String!, perfil: Perfil!): AuthPayload
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!   
  nome: String!
  email: String! 
  perfil: Perfil!
}

type Categoria {
  id: ID! 
  descricao: String!
}

enum Perfil {
  FINAN
  ADMIN
  COMPR
  COLAB
}

enum Status {
  CONCLUIDO
  INICIADO
  PENDENTE
  CANCELADO
}

enum TipoPonto {
  ENTRADA
  SAIDA
}

type Receita {
  id: ID!
  cliente: Cliente
  descricao: String!
  entrada: Date!
  valor: Float! 
  tipo: TipoReceita!
  quantidade: Int
}

enum TipoReceita {
  MENSALIDADE
  DIARIA
  PERIODO
}

type Cliente {
  nome: String
  telefone: String
  endereco: String
  email: String  
  cpf: String 
  cep: String
  createdAt: DateTime!
  updatedAt: DateTime!
}